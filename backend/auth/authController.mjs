import dotenv from 'dotenv';                                                                                                     // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º dotenv –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è
import { resolve } from 'path';                                                                                                  // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º resolve –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∞–±—Å–æ–ª—é—Ç–Ω—ã—Ö –ø—É—Ç–µ–π

const isProduction = process.env.NODE_ENV === 'production';                                                                      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã: production –∏–ª–∏ development
const envPath = isProduction                                                                                                     // –í—ã–±–∏—Ä–∞–µ–º –ø—É—Ç—å –∫ .env —Ñ–∞–π–ª—É –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –æ–∫—Ä—É–∂–µ–Ω–∏—è
    ? '/var/www/serpmonn.ru/.env'                                                                                                // –ü—Ä–æ–¥–∞–∫—à–µ–Ω –ø—É—Ç—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
    : resolve(process.cwd(), 'backend/.env');                                                                                    // –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ - –∞–±—Å–æ–ª—é—Ç–Ω—ã–π –ø—É—Ç—å –∫ .env –≤ –ø–∞–ø–∫–µ backend

dotenv.config({ path: envPath });                                                                                                // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø—É—Ç–∏
                                                                                              
import bcrypt from 'bcryptjs';                                                                // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º bcrypt –¥–ª—è —Ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è –ø–∞—Ä–æ–ª–µ–π
import paseto from 'paseto';                                                                  // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º paseto –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–æ–∫–µ–Ω–æ–≤
import { query } from '../database/config.mjs';                                               // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é query –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ë–î
import { validationResult } from 'express-validator';                                         // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º validationResult –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–∞–Ω–Ω—ã—Ö
import { v4 as uuidv4 } from 'uuid';                                                         // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º uuidv4 –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö ID
import { sendConfirmationEmail } from '../utils/mailer.mjs';                                 // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ email
                                                                                              
const { V2 } = paseto;                                                                         // –ò–∑–≤–ª–µ–∫–∞–µ–º V2 –∏–∑ paseto –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ç–æ–∫–µ–Ω–∞–º–∏
const { hash, compare } = bcrypt;                                                              // –ò–∑–≤–ª–µ–∫–∞–µ–º hash –∏ compare –∏–∑ bcrypt
const secretKey = process.env.SECRET_KEY;                                                     // –ü–æ–ª—É—á–∞–µ–º —Å–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–ª—é—á –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
                                                                                              
export const registerUser = async (req, res) => {                                             // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const errors = validationResult(req);                                                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –æ—à–∏–±–∫–∏
  if (!errors.isEmpty()) {                                                                     // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –æ—à–∏–±–∫–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏
    return res.status(400).json({ errors: errors.array() });                                    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—à–∏–±–∫–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON
  }                                                                                            
                                                                                              
  const { username, email, password } = req.body;                                              // –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ç–µ–ª–∞ –∑–∞–ø—Ä–æ—Å–∞
                                                                                              
  try {                                                                                        // –ù–∞—á–∏–Ω–∞–µ–º –±–ª–æ–∫ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫
    const [usernameExists] = await query("SELECT id FROM users WHERE username = ?", [username]); // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–Ω—è—Ç –ª–∏ username
    if (usernameExists && usernameExists.id) {                                                 // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
      return res.status(400).json({ message: "–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è!" });          // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—à–∏–±–∫—É
    }                                                                                         
                                                                                              
    const [emailExists] = await query("SELECT id FROM users WHERE email = ?", [email]);       // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–Ω—è—Ç –ª–∏ email
    if (emailExists && emailExists.id) {                                                      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ email
      return res.status(400).json({ message: "Email —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è!" });                    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—à–∏–±–∫—É
    }                                                                                         
                                                                                              
    const passwordHash = await hash(password, 10);                                            // –•–µ—à–∏—Ä—É–µ–º –ø–∞—Ä–æ–ª—å —Å —Å–æ–ª—å—é (10 —Ä–∞—É–Ω–¥–æ–≤)
    const userId = uuidv4();                                                                  // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const telegramConfirmLink = `https://t.me/SerpmonnConfirmBot?startapp=${userId}`;            // –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Å—ã–ª–∫—É –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
                                                                                              
    await query(                                                                              // –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –≤—Å—Ç–∞–≤–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      "INSERT INTO users (id, username, email, password_hash, confirmed) VALUES (?, ?, ?, ?, ?)", // SQL-–∑–∞–ø—Ä–æ—Å –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏
      [userId, username, email, passwordHash, false]                                           // –ü–µ—Ä–µ–¥–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –∑–∞–ø—Ä–æ—Å
    );                                                                                        
                                                                                              
    res.status(200).json({                                                                    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç –∫–ª–∏–µ–Ω—Ç—É
      success: true,                                                                          // –£–∫–∞–∑—ã–≤–∞–µ–º —É—Å–ø–µ—à–Ω–æ—Å—Ç—å –æ–ø–µ—Ä–∞—Ü–∏–∏
      message: "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞! –í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.",                         // –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      userId: userId,                                                                         // –ü–µ—Ä–µ–¥–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      confirmLink: telegramConfirmLink                                                        // –ü–µ—Ä–µ–¥–∞–µ–º —Å—Å—ã–ª–∫—É –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
    });                                                                                       
  } catch (error) {                                                                           // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤–æ–∑–º–æ–∂–Ω—ã–µ –æ—à–∏–±–∫–∏
    console.error("–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:", error);                                              // –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É –≤ –∫–æ–Ω—Å–æ–ª—å
    res.status(500).json({ message: "–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞." });                                    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—à–∏–±–∫—É —Å–µ—Ä–≤–µ—Ä–∞ –∫–ª–∏–µ–Ω—Ç—É
  }                                                                                         
};

export const confirmTelegram = async (req, res) => {
  const { userId, source } = req.body;
  
  console.log('üì± –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —á–µ—Ä–µ–∑ Telegram Web App:', { userId, source });

  try {
    if (!userId || !/^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i.test(userId)) {
      console.log('‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç UserID:', userId);
      return res.status(400).json({ 
        success: false, 
        message: "–ù–µ–≤–µ—Ä–Ω–∞—è —Å—Å—ã–ª–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è" 
      });
    }

    const [user] = await query(
      "SELECT id, username, email, confirmed FROM users WHERE id = ?", 
      [userId]
    );

    if (!user) {
      console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω:', userId);
      return res.status(404).json({ 
        success: false, 
        message: "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü—Ä–æ–π–¥–∏—Ç–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –∑–∞–Ω–æ–≤–æ." 
      });
    }

    if (user.confirmed) {
      console.log('‚ÑπÔ∏è –ê–∫–∫–∞—É–Ω—Ç —É–∂–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω:', user.username);
      return res.json({ 
        success: true, 
        message: `–ê–∫–∫–∞—É–Ω—Ç ${user.username} —É–∂–µ –±—ã–ª –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω —Ä–∞–Ω–µ–µ` 
      });
    }

    console.log('‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –∞–∫–∫–∞—É–Ω—Ç:', user.username);
    await query("UPDATE users SET confirmed = ? WHERE id = ?", [true, user.id]);

    res.json({ 
      success: true, 
      message: `–ê–∫–∫–∞—É–Ω—Ç ${user.username} —É—Å–ø–µ—à–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω!` 
    });

  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ —á–µ—Ä–µ–∑ Telegram:", error);
    res.status(500).json({ 
      success: false, 
      message: "–ü—Ä–æ–∏–∑–æ—à–ª–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ." 
    });
  }
};
                                                                                              
export const confirmEmail = async (req, res) => {                                             // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è email
  const { email, userId } = req.body;                                                        // –ò–∑–≤–ª–µ–∫–∞–µ–º email –∏ userId –∏–∑ —Ç–µ–ª–∞ –∑–∞–ø—Ä–æ—Å–∞
                                                                                              
  try {                                                                                       // –ù–∞—á–∏–Ω–∞–µ–º –±–ª–æ–∫ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫
    const [user] = await query("SELECT id FROM users WHERE id = ? AND email = ?", [userId, email]); // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if (!user) {                                                                              // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞–π–¥–µ–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
      return res.status(404).json({ message: "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω." });                     // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—à–∏–±–∫—É
    }                                                                                         
                                                                                              
    const confirmationToken = uuidv4();                                                       // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ç–æ–∫–µ–Ω –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
    const tokenExpires = new Date(Date.now() + 3600000);                                      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è —Ç–æ–∫–µ–Ω–∞ (1 —á–∞—Å)
                                                                                              
    await query(                                                                              // –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      "UPDATE users SET confirmation_token = ?, confirmation_token_expires = ? WHERE id = ?", // SQL-–∑–∞–ø—Ä–æ—Å –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
      [confirmationToken, tokenExpires, userId]                                               // –ü–µ—Ä–µ–¥–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –∑–∞–ø—Ä–æ—Å
    );                                                                                        
                                                                                              
    const confirmLink = `https://serpmonn.ru/auth/confirm?token=${confirmationToken}`;    // –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Å—ã–ª–∫—É –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
    await sendConfirmationEmail(email, confirmLink);                                          // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–∏—Å—å–º–æ —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º
                                                                                              
    res.json({ success: true, message: "–ü–∏—Å—å–º–æ —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ." });              // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç –∫–ª–∏–µ–Ω—Ç—É
  } catch (error) {                                                                           // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤–æ–∑–º–æ–∂–Ω—ã–µ –æ—à–∏–±–∫–∏
    console.error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ email:", error);                                            // –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É –≤ –∫–æ–Ω—Å–æ–ª—å
    res.status(500).json({ message: "–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞." });                                    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—à–∏–±–∫—É —Å–µ—Ä–≤–µ—Ä–∞ –∫–ª–∏–µ–Ω—Ç—É
  }                                                                                         
};                                                                                           
                                                                                              
export const confirmToken = async (req, res) => {                                             // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–æ–∫–µ–Ω–∞
  const { token } = req.query;                                                               // –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∑–∞–ø—Ä–æ—Å–∞
                                                                                              
  try {                                                                                       // –ù–∞—á–∏–Ω–∞–µ–º –±–ª–æ–∫ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫
    const [user] = await query(                                                               // –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      "SELECT id, email, username FROM users WHERE confirmation_token = ? AND confirmation_token_expires > ?", // SQL-–∑–∞–ø—Ä–æ—Å
      [token, new Date()]                                                                     // –ü–µ—Ä–µ–¥–∞–µ–º —Ç–æ–∫–µ–Ω –∏ —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É
    );                                                                                        
                                                                                              
    if (!user) {                                                                              // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞–π–¥–µ–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
      return res.status(400).json({ message: "–ù–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π –∏–ª–∏ –∏—Å—Ç—ë–∫—à–∏–π —Ç–æ–∫–µ–Ω." });       // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—à–∏–±–∫—É
    }                                                                                         
                                                                                              
    await query(                                                                              // –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞
      "UPDATE users SET confirmed = ?, confirmation_token = NULL, confirmation_token_expires = NULL WHERE id = ?", // SQL-–∑–∞–ø—Ä–æ—Å
      [true, user.id]                                                                         // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º confirmed –∏ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Ç–æ–∫–µ–Ω
    );                                                                                        
                                                                                              
    const payload = { id: user.id, email: user.email, username: user.username || user.email };             // –§–æ—Ä–º–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ç–æ–∫–µ–Ω–∞
    const authToken = await V2.sign(payload, secretKey);                                      // –°–æ–∑–¥–∞–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–æ–Ω–Ω—ã–π —Ç–æ–∫–µ–Ω
                                                                                              
    res.cookie('token', authToken, {                                                         // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º cookie —Å —Ç–æ–∫–µ–Ω–æ–º
      httpOnly: true,                                                                        // –ó–∞—â–∏—â–∞–µ–º cookie –æ—Ç –¥–æ—Å—Ç—É–ø–∞ —á–µ—Ä–µ–∑ JS
      secure: true,                                                                          // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –¥–ª—è HTTPS
      sameSite: 'Lax',                                                                       // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ–ª–∏—Ç–∏–∫—É SameSite
      maxAge: 30 * 24 * 60 * 60 * 1000,                                                      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è (30 –¥–Ω–µ–π)
      domain: '.serpmonn.ru'                                                                 // –í–µ–¥—É—â–∞—è —Ç–æ—á–∫–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã –Ω–∞ –≤—Å–µ—Ö –ø–æ–¥–¥–æ–º–µ–Ω–∞—Ö
    });                                                                                       
                                                                                              
    console.log('–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å', user.email, 'confirmed = 1, —Ç–æ–∫–µ–Ω —Å–æ–∑–¥–∞–Ω');    // –õ–æ–≥–∏—Ä—É–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
    res.redirect('https://serpmonn.ru/frontend/profile/profile.html');                    // –ü–µ—Ä–µ–∞–¥—Ä–µ—Å—É–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø—Ä–æ—Ñ–∏–ª—è
  } catch (error) {                                                                           // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤–æ–∑–º–æ–∂–Ω—ã–µ –æ—à–∏–±–∫–∏
    console.error("–û—à–∏–±–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è:", error);                                             // –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É –≤ –∫–æ–Ω—Å–æ–ª—å
    res.status(500).json({ message: "–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞." });                                    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—à–∏–±–∫—É —Å–µ—Ä–≤–µ—Ä–∞ –∫–ª–∏–µ–Ω—Ç—É
  }                                                                                         
};                                                                                           
                                                                                              
export const loginUser = async (req, res) => {                                                // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –≤—Ö–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const { email, password } = req.body;                                                      // –ò–∑–≤–ª–µ–∫–∞–µ–º email –∏ –ø–∞—Ä–æ–ª—å –∏–∑ —Ç–µ–ª–∞ –∑–∞–ø—Ä–æ—Å–∞
                                                                                              
  const queryStr = 'SELECT * FROM users WHERE email = ?';                                     // –ó–∞–¥–∞–µ–º SQL-–∑–∞–ø—Ä–æ—Å –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  try {                                                                                       // –ù–∞—á–∏–Ω–∞–µ–º –±–ª–æ–∫ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫
    const results = await query(queryStr, [email]);                                           // –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    if (results.length === 0) {                                                               // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞–π–¥–µ–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
      return res.status(401).json({ message: '–ù–µ–≤–µ—Ä–Ω—ã–π email –∏–ª–∏ –ø–∞—Ä–æ–ª—å' });                  // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—à–∏–±–∫—É
    }                                                                                         
                                                                                              
    const user = results[0];                                                                  // –ò–∑–≤–ª–µ–∫–∞–µ–º –ø–µ—Ä–≤–æ–≥–æ –Ω–∞–π–¥–µ–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const isMatch = await compare(password, user.password_hash);                              // –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º –≤–≤–µ–¥–µ–Ω–Ω—ã–π –ø–∞—Ä–æ–ª—å —Å —Ö–µ—à–µ–º
    if (!isMatch) {                                                                           // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–≤–ø–∞–¥–∞–µ—Ç –ª–∏ –ø–∞—Ä–æ–ª—å
      return res.status(401).json({ message: '–ù–µ–≤–µ—Ä–Ω—ã–π email –∏–ª–∏ –ø–∞—Ä–æ–ª—å' });                  // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—à–∏–±–∫—É
    }                                                                                         
                                                                                              
    const payload = { id: user.id, username: user.username, email: user.email };                           // –§–æ—Ä–º–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ç–æ–∫–µ–Ω–∞
    const token = await V2.sign(payload, secretKey);                                          // –°–æ–∑–¥–∞–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–æ–Ω–Ω—ã–π —Ç–æ–∫–µ–Ω
                                                                                              
    res.cookie('token', token, {                                                              // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º cookie —Å —Ç–æ–∫–µ–Ω–æ–º
      httpOnly: true,                                                                        // –ó–∞—â–∏—â–∞–µ–º cookie –æ—Ç –¥–æ—Å—Ç—É–ø–∞ —á–µ—Ä–µ–∑ JS
      secure: true,                                                                          // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –¥–ª—è HTTPS
      sameSite: 'Lax',                                                                    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ–ª–∏—Ç–∏–∫—É SameSite –¥–ª—è —Ä–∞–±–æ—Ç—ã –º–µ–∂–¥—É —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º–∏
      maxAge: 24 * 60 * 60 * 1000,                                                           // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è (1 –¥–µ–Ω—å)
      domain: '.serpmonn.ru'                                                                 // –í–µ–¥—É—â–∞—è —Ç–æ—á–∫–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã –Ω–∞ –≤—Å–µ—Ö –ø–æ–¥–¥–æ–º–µ–Ω–∞—Ö
    });                                                                                       
                                                                                              
    res.json({ message: '–í—Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ' });                                           // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç –∫–ª–∏–µ–Ω—Ç—É
  } catch (error) {                                                                           // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤–æ–∑–º–æ–∂–Ω—ã–µ –æ—à–∏–±–∫–∏
    res.status(500).json({ message: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞', error });               // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—à–∏–±–∫—É —Å–µ—Ä–≤–µ—Ä–∞
  }                                                                                         
};                                                                                           
                                                                                              
export const logoutUser = (req, res) => {                                                    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –≤—ã—Ö–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  res.clearCookie('token', {                                                                 // –£–¥–∞–ª—è–µ–º cookie —Å —Ç–æ–∫–µ–Ω–æ–º
    httpOnly: true,                                                                          // –ó–∞—â–∏—â–∞–µ–º cookie –æ—Ç –¥–æ—Å—Ç—É–ø–∞ —á–µ—Ä–µ–∑ JS
    secure: true,                                                                            // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –¥–ª—è HTTPS
    sameSite: 'Lax'                                                                       // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ–ª–∏—Ç–∏–∫—É SameSite –¥–ª—è —Ä–∞–±–æ—Ç—ã –º–µ–∂–¥—É —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º–∏
  });                                                                                       
  res.json({ message: '–í—ã—Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ' });                                           // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç –∫–ª–∏–µ–Ω—Ç—É
};                                                                                           
                                                                                              
export default { registerUser, confirmEmail, confirmToken, loginUser, logoutUser };          // –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏